<!DOCTYPE html>
<html lang="fr">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1" />
  <title>Questionnaire Drivers AT ‚Äî Auto-positionnement</title>
  <meta name="description" content="Questionnaire de 40 items (drivers AT) ‚Äî auto-positionnement, scoring, export, impression. Formatrice : Jennifer Mandot." />
  <style>
    /* =====================
       Styles de base
       ===================== */
    :root{
      --bg: #0b0c10;
      --card: #111318;
      --text: #e8eaed;
      --muted: #9aa0a6;
      --accent: #4f8cff;
      --accent-2: #7c4dff;
      --ok: #34a853;
      --warn: #fbbc05;
      --err: #ea4335;
      --border: #22252d;
      --shadow: 0 8px 24px rgba(0,0,0,.35);
    }

    @media (prefers-color-scheme: light){
      :root{
        --bg: #f7f8fa;
        --card: #ffffff;
        --text: #1f2937;
        --muted: #4b5563;
        --accent: #1d4ed8;
        --accent-2: #7c3aed;
        --ok: #16a34a;
        --warn: #ca8a04;
        --err: #dc2626;
        --border: #e5e7eb;
        --shadow: 0 8px 30px rgba(31,41,55,.08);
      }
    }

    html, body{height:100%;}
    body{
      margin:0; font-family: system-ui, -apple-system, Segoe UI, Roboto, Ubuntu, Cantarell, "Helvetica Neue", Noto Sans, Arial, "Apple Color Emoji", "Segoe UI Emoji";
      color:var(--text); background:linear-gradient(180deg,var(--bg), #0d1117 40%, var(--bg));
    }

    .container{ max-width: 1050px; margin: 0 auto; padding: 28px 16px 80px; }

    header{ position: sticky; top: 0; z-index: 20; backdrop-filter: blur(6px); background: color-mix(in lab, var(--bg) 75%, transparent); border-bottom: 1px solid var(--border); }
    header .inner{ max-width: 1050px; margin: 0 auto; padding: 14px 16px; display:flex; gap:12px; align-items:center; }
    .logo{ width: 40px; height: 40px; border-radius: 8px; object-fit: cover; box-shadow: var(--shadow); }
    .title{ font-weight: 700; letter-spacing:.2px; }

    .card{ background: var(--card); border: 1px solid var(--border); border-radius: 16px; box-shadow: var(--shadow); }
    .section{ padding: 20px; }
    .section h2{ margin: 0 0 10px; font-size: 1.25rem; }
    .muted{ color: var(--muted); }

    .grid{ display:grid; gap:16px; }

    .actions{ display:flex; flex-wrap: wrap; gap: 10px; align-items:center; }
    button, .btn{
      appearance: none; border:1px solid var(--border); background: linear-gradient(180deg,#1a1f2a,#121722);
      color:var(--text); padding:10px 14px; border-radius: 12px; font-weight:600; cursor:pointer;
      transition: transform .035s ease, border-color .2s ease; box-shadow: var(--shadow);
    }
    @media (prefers-color-scheme: light){
      button, .btn{ background: linear-gradient(180deg,#ffffff,#f3f4f6); }
    }
    button:hover{ transform: translateY(-1px); }
    button.primary{ border-color: color-mix(in lab, var(--accent) 65%, var(--border)); }
    button.ghost{ background: transparent; }

    /* Questionnaire */
    .scale{ display:grid; grid-template-columns: repeat(5, minmax(40px,1fr)); gap:4px; text-align:center; font-size:.85rem; }
    .item{ border-top:1px dashed var(--border); padding:16px 0; }
    .item:first-child{ border-top:none; }
    .q-head{ display:flex; gap:12px; align-items:flex-start; }
    .q-num{ flex: 0 0 28px; width:28px; height:28px; display:grid; place-items:center; border-radius:8px; background:color-mix(in lab, var(--accent) 25%, var(--card)); font-weight:700; }
    .q-text{ line-height:1.45; }
    .radios{ display:grid; grid-template-columns: repeat(5, 1fr); gap:8px; margin-top:10px; }
    .radio{ display:flex; align-items:center; justify-content:center; gap:8px; padding:8px; border:1px solid var(--border); border-radius:8px; }
    .radio input{ transform: scale(1.05); }

    .legend{ display:flex; gap:10px; flex-wrap: wrap; align-items:center; font-size:.9rem; }
    .pill{ padding:6px 10px; border:1px solid var(--border); border-radius:999px; background:color-mix(in lab, var(--card) 60%, transparent); }

    /* R√©sultats */
    #results{ display:none; }
    .results-grid{ display:grid; grid-template-columns: 1fr; gap:16px; }
    @media (min-width: 860px){ .results-grid{ grid-template-columns: .9fr 1.1fr; } }
    .table{ width:100%; border-collapse: collapse; }
    .table th, .table td{ border-bottom:1px solid var(--border); padding:10px 8px; text-align:left; }
    .badge{ padding:4px 8px; border-radius:8px; border:1px solid var(--border); }

    canvas{ width:100%; height:380px; border:1px solid var(--border); border-radius: 12px; background: color-mix(in lab, var(--card) 80%, transparent); }

    .footer{ margin-top: 26px; font-size:.9rem; color:var(--muted); }
    .notice{ border-left:4px solid var(--accent); padding:10px 12px; background: color-mix(in lab, var(--card) 70%, transparent); border-radius:8px; }

    /* Impression */
    @media print{
      header, .no-print{ display:none !important; }
      body{ background:#fff; }
      .container{ padding:0; }
      .card{ border:none; box-shadow:none; }
      canvas{ height:260px; }
    }
  </style>
</head>
<body>
  <header class="no-print" role="banner">
    <div class="inner">
      <img src="logo-jennifer-mandot.png" alt="Logo Jennifer Mandot" class="logo" />
      <div>
        <div class="title">Questionnaire Drivers AT ‚Äî Auto-positionnement</div>
        <div class="muted" style="font-size:.9rem">40 items ‚Ä¢ scoring imm√©diat ‚Ä¢ export CSV/JSON ‚Ä¢ impression</div>
        <div class="muted" style="font-size:.85rem">Formatrice : <strong>Jennifer Mandot</strong></div>
      </div>
      <div style="margin-left:auto" class="actions">
        <button id="btn-print" class="ghost" title="Imprimer / PDF (Ctrl/Cmd+P)">üñ®Ô∏è Imprimer</button>
        <button id="btn-reset" class="ghost" title="Effacer toutes les r√©ponses">‚Ü∫ Refaire</button>
      </div>
    </div>
  </header>

  <main class="container" id="top" role="main">
    <!-- Intro -->
    <section class="card section" aria-labelledby="intro-h">
      <h1 id="intro-h" style="margin:0 0 8px">Auto-positionnement ‚Äî 5 drivers (Analyse Transactionnelle)</h1>
      <p class="muted">Cochez pour chaque affirmation le degr√© d‚Äôaccord de 1 √† 5. <strong>R√©pondez spontan√©ment</strong>, sans chercher la bonne r√©ponse : il s‚Äôagit de votre fonctionnement habituel, notamment sous pression.</p>
      <div class="legend" aria-describedby="scale-help">
        <span id="scale-help" class="pill">1 = Pas du tout d‚Äôaccord</span>
        <span class="pill">2 = Plut√¥t pas d‚Äôaccord</span>
        <span class="pill">3 = Moyennement d‚Äôaccord</span>
        <span class="pill">4 = Plut√¥t d‚Äôaccord</span>
        <span class="pill">5 = Tout √† fait d‚Äôaccord</span>
      </div>
    </section>

    <!-- Questionnaire -->
    <section class="card section" aria-labelledby="q-h">
      <div class="actions no-print" style="justify-content:space-between; margin-bottom:6px">
        <h2 id="q-h" style="margin:0">Questionnaire</h2>
        <div>
          <label style="font-size:.9rem; margin-right:8px"><input type="checkbox" id="persist" /> Sauvegarder localement</label>
          <button id="btn-calc" class="primary">Calculer mon profil</button>
        </div>
      </div>
      <div id="questions" class="grid" role="group" aria-label="40 items du questionnaire"></div>
      <div class="notice no-print" style="margin-top:12px">Astuce : vous pouvez utiliser la touche <strong>Tab</strong> pour naviguer, puis les fl√®ches pour s√©lectionner une valeur.</div>
    </section>

    <!-- R√©sultats -->
    <section id="results" class="card section" aria-labelledby="res-h">
      <div class="actions" style="justify-content:space-between; gap:12px">
        <h2 id="res-h" style="margin:0">R√©sultats</h2>
        <div class="no-print actions">
          <button id="btn-export-csv">Exporter CSV</button>
          <button id="btn-export-json">Exporter JSON</button>
        </div>
      </div>

      <div class="results-grid" id="resultats">
        <div>
          <table class="table" aria-describedby="res-desc">
            <thead>
              <tr>
                <th>Driver</th>
                <th>Items</th>
                <th>Moyenne / 5</th>
                <th>%</th>
                <th>R√¥le p√©dagogique</th>
              </tr>
            </thead>
            <tbody id="table-body"></tbody>
          </table>
          <p id="res-desc" class="muted" style="margin:10px 0 0">Les pourcentages sont calcul√©s sur une √©chelle 0‚Äì100 √† partir des moyennes (x20). Les drivers les plus √©lev√©s sont dominants.</p>
        </div>
        <div>
          <canvas id="chart" width="640" height="380" role="img" aria-label="Graphique des scores par driver"></canvas>
        </div>
      </div>

      <div class="footer">
        <strong>Cl√©s de lecture</strong> :
        <div style="margin-top:6px" class="grid">
          <div class="notice">
            <strong>Sois parfait</strong> ‚Äî + Qualit√© / rigueur ‚Ä¢ ‚Äì Peur de l‚Äôerreur / surcharge
          </div>
          <div class="notice">
            <strong>Fais plaisir</strong> ‚Äî + Coop√©ration ‚Ä¢ ‚Äì Difficult√© √† dire non
          </div>
          <div class="notice">
            <strong>Sois fort</strong> ‚Äî + Sang-froid ‚Ä¢ ‚Äì Distance √©motionnelle
          </div>
          <div class="notice">
            <strong>Fais des efforts</strong> ‚Äî + Pers√©v√©rance ‚Ä¢ ‚Äì Complexification
          </div>
          <div class="notice">
            <strong>D√©p√™che-toi</strong> ‚Äî + Efficacit√© ‚Ä¢ ‚Äì Pr√©cipitation
          </div>
        </div>
      </div>
    </section>

    <p class="muted" style="margin-top:16px">¬© 2025 ‚Äî Conception du questionnaire : <strong>Jennifer Mandot</strong>. Licence <a href="#" onclick="alert('MIT License ‚Äî Utilisation libre avec attribution.'); return false;">MIT</a>.</p>
  </main>

  <script>
    /*
      Questionnaire Drivers AT ‚Äî tout-en-un (index unique)
      Auteur du questionnaire: Jennifer Mandot ‚Äî Licence MIT
      Fonctionnalit√©s: g√©n√©ration dynamique des 40 items, validation, scoring (moyenne + %),
      graphique <canvas> sans librairie, export CSV/JSON, impression, sauvegarde locale.
    */

    // 1) Donn√©es ‚Äî items m√©lang√©s (texte) et mapping -> driver
    const ITEMS = [
      "J‚Äôai du mal √† demander de l‚Äôaide.",
      "J‚Äôaime que tout le monde s‚Äôentende bien.",
      "J‚Äôai du mal √† accepter mes erreurs.",
      "Je suis souvent press√©(e), m√™me sans vraie raison.",
      "Je pr√©f√®re les t√¢ches complexes aux t√¢ches faciles.",
      "Je me sens coupable quand je d√©√ßois quelqu‚Äôun.",
      "Je me sens productif(ve) quand je suis dans l‚Äôurgence.",
      "J‚Äôai tendance √† relire et corriger plusieurs fois mes productions.",
      "J‚Äôai tendance √† croire que la r√©ussite doit se m√©riter.",
      "Je pr√©f√®re √©viter les conflits, m√™me si je ne suis pas d‚Äôaccord.",
      "J‚Äôai peur d‚Äô√™tre jug√©(e) si je fais une faute.",
      "Je garde souvent mes probl√®mes pour moi.",
      "Je trouve plus de satisfaction dans l‚Äôeffort que dans le r√©sultat.",
      "Je d√©teste perdre du temps.",
      "J‚Äôai du mal √† montrer que je suis fatigu√©(e) ou triste.",
      "Je cherche toujours √† faire les choses ¬´ comme il faut ¬ª.",
      "J‚Äôai tendance √† commencer plusieurs choses en m√™me temps.",
      "Je me m√©fie des solutions trop simples.",
      "Je m‚Äôinqui√®te facilement si quelqu‚Äôun ne m‚Äôaime pas.",
      "Je valorise la ma√Ætrise de soi, m√™me dans les situations difficiles.",
      "Je me sens mal √† l‚Äôaise quand les autres ne respectent pas les r√®gles.",
      "Je me sens coupable quand je n‚Äôai pas travaill√© dur.",
      "J‚Äôai du mal √† attendre ou √† faire les choses lentement.",
      "Je me fixe souvent des objectifs tr√®s √©lev√©s.",
      "J‚Äôai tendance √† faire passer les besoins des autres avant les miens.",
      "Je suis plus √† l‚Äôaise dans le r√¥le de celui/celle qui aide que de celui/celle qui re√ßoit de l‚Äôaide.",
      "Je me sens fier(e) de mon endurance face aux difficult√©s.",
      "Je m‚Äôimpatiente quand les autres ne vont pas assez vite.",
      "On me dit souvent que je suis trop exigeant(e).",
      "J‚Äôai besoin de reconnaissance pour mes efforts.",
      "Je parle ou marche souvent vite.",
      "J‚Äôai souvent le sentiment qu‚Äôil faut ¬´ lutter ¬ª pour obtenir quelque chose.",
      "J‚Äô√©vite de montrer mes √©motions.",
      "Je cherche souvent √† deviner ce que les autres attendent de moi.",
      "Je n‚Äôaime pas rendre un travail tant qu‚Äôil n‚Äôest pas impeccable.",
      "Il m‚Äôest difficile de dire non.",
      "Je pense qu‚Äôil faut rester fort(e), quoi qu‚Äôil arrive.",
      "J‚Äôai du mal √† accepter que certaines choses puissent √™tre simples.",
      "Il m‚Äôest difficile de prendre du temps pour me d√©tendre.",
      "Je suis fier(e) de la qualit√© de mon travail, m√™me si cela prend du temps."
    ];

    // Mapping items -> driver keys (index 1-based dans l‚Äô√©nonc√©)
    const DRIVERS = {
      parfait:   { label: "Sois parfait", items: [3,8,11,16,21,24,29,35,40] },
      plaisir:   { label: "Fais plaisir", items: [2,6,10,19,25,30,34,36] },
      fort:      { label: "Sois fort", items: [1,12,15,20,26,33,37] },
      efforts:   { label: "Fais des efforts", items: [5,9,13,18,22,27,32,38] },
      vite:      { label: "D√©p√™che-toi", items: [4,7,14,17,23,28,31,39] }
    };

    const DRIVER_KEYS = Object.keys(DRIVERS);

    // 2) Rendu des questions
    const $q = document.getElementById('questions');
    function renderItems(){
      const frag = document.createDocumentFragment();
      ITEMS.forEach((text, i) => {
        const num = i + 1;
        const wrap = document.createElement('div');
        wrap.className = 'item';
        wrap.innerHTML = `
          <div class=\"q-head\">
            <div class=\"q-num\" aria-hidden=\"true\">${num}</div>
            <div class=\"q-text\">${text}</div>
          </div>
          <div class=\"radios\" role=\"group\" aria-label=\"√âchelle 1 √† 5 pour l‚Äôitem ${num}\">\n            ${[1,2,3,4,5].map(val => `
              <label class=\"radio\" for=\"q${num}-${val}\">\n                <input type=\"radio\" name=\"q${num}\" id=\"q${num}-${val}\" value=\"${val}\" />\n                <span>${val}</span>\n              </label>\n            `).join('')}\n          </div>
        `;
        frag.appendChild(wrap);
      });
      $q.appendChild(frag);
    }

    // 3) Lecture des r√©ponses
    function getResponses(){
      const values = {};
      for(let i=1;i<=ITEMS.length;i++){
        const checked = document.querySelector(`input[name=q${i}]:checked`);
        values[i] = checked ? Number(checked.value) : null;
      }
      return values;
    }

    function validate(values){
      const missing = Object.entries(values).filter(([,v]) => v==null).map(([k])=>Number(k));
      return { valid: missing.length===0, missing };
    }

    // 4) Scoring
    function computeScores(values){
      const scores = {};
      for(const key of DRIVER_KEYS){
        const indices = DRIVERS[key].items;
        const answers = indices.map(i => values[i]).filter(v => typeof v === 'number');
        const total = answers.reduce((a,b)=>a+b,0);
        const mean = answers.length ? total / answers.length : 0;
        const pct  = Math.round(mean * 20); // 5 -> 100%
        scores[key] = { label: DRIVERS[key].label, count: answers.length, total, mean, pct, items: indices };
      }
      return scores;
    }

    // 5) Rendu r√©sultats + mise en avant des dominants
    const $results = document.getElementById('results');
    const $tbody   = document.getElementById('table-body');
    function renderResults(scores){
      // Trouver max pct pour badges
      const maxPct = Math.max(...DRIVER_KEYS.map(k => scores[k].pct));
      $tbody.innerHTML = '';
      DRIVER_KEYS.forEach(k => {
        const s = scores[k];
        const tr = document.createElement('tr');
        const badge = s.pct === maxPct ? `<span class=\"badge\" style=\"border-color:var(--ok)\">dominant</span>` : '';
        tr.innerHTML = `
          <td><strong>${s.label}</strong> ${badge}</td>
          <td class=\"muted\">${s.items.join(', ')}</td>
          <td>${s.mean.toFixed(2)}</td>
          <td>${String(s.pct).padStart(2,' ')}%</td>
          <td class=\"muted\">${summaryFor(k)}</td>
        `;
        $tbody.appendChild(tr);
      });
      drawChart(scores);
      $results.style.display = 'block';
      // ancre
      location.hash = '#resultats';
    }

    function summaryFor(key){
      switch(key){
        case 'parfait': return '+ Qualit√©/rigueur ‚Äî ‚Äì Peur de l‚Äôerreur/surcharge';
        case 'plaisir': return '+ Coop√©ration ‚Äî ‚Äì Difficult√© √† dire non';
        case 'fort':    return '+ Sang-froid ‚Äî ‚Äì Distance √©motionnelle';
        case 'efforts': return '+ Pers√©v√©rance ‚Äî ‚Äì Complexification';
        case 'vite':    return '+ Efficacit√© ‚Äî ‚Äì Pr√©cipitation';
        default: return '';
      }
    }

    // 6) Graphique barres simple en <canvas> (sans librairie)
    const $canvas = document.getElementById('chart');
    const ctx = $canvas.getContext('2d');

    function drawChart(scores){
      const labels = DRIVER_KEYS.map(k => DRIVERS[k].label);
      const data   = DRIVER_KEYS.map(k => scores[k].pct);
      const W = $canvas.width, H = $canvas.height;
      ctx.clearRect(0,0,W,H);

      // fond
      ctx.fillStyle = getComputedStyle(document.body).getPropertyValue('--card');
      ctx.fillRect(0,0,W,H);

      // axes
      const bottom = H - 42; const top = 24; const left = 56; const right = W - 24;
      ctx.strokeStyle = getComputedStyle(document.body).getPropertyValue('--border');
      ctx.lineWidth = 1;

      // lignes horizontales (0,25,50,75,100)
      ctx.font = '12px system-ui';
      ctx.fillStyle = getComputedStyle(document.body).getPropertyValue('--muted');
      for(let p=0; p<=100; p+=25){
        const y = bottom - (p/100)*(bottom-top);
        ctx.beginPath(); ctx.moveTo(left, y); ctx.lineTo(right, y); ctx.stroke();
        ctx.fillText(p + '%', 12, y+4);
      }

      // barres
      const n = data.length;
      const gap = 16; // espacement barres
      const barW = (right-left - (n-1)*gap) / n;
      const accent = getComputedStyle(document.body).getPropertyValue('--accent');
      const accent2 = getComputedStyle(document.body).getPropertyValue('--accent-2');

      for(let i=0;i<n;i++){
        const x = left + i*(barW+gap);
        const h = (data[i]/100)*(bottom-top);
        const y = bottom - h;
        // d√©grad√© vertical
        const grad = ctx.createLinearGradient(0,y,0,bottom);
        grad.addColorStop(0, accent.trim());
        grad.addColorStop(1, accent2.trim());
        ctx.fillStyle = grad;
        ctx.fillRect(x, y, barW, h);
        // √©tiquette valeur
        ctx.fillStyle = '#fff';
        ctx.font = 'bold 12px system-ui';
        ctx.fillText(data[i] + '%', x + barW/2 - 14, y - 6);
        // label x
        ctx.fillStyle = getComputedStyle(document.body).getPropertyValue('--text');
        wrapText(ctx, labels[i], x, bottom+14, barW, 14);
      }
    }

    function wrapText(ctx, text, x, y, maxWidth, lineHeight){
      const words = text.split(' ');
      let line = ''; let ly = y;
      ctx.font = '12px system-ui';
      ctx.textBaseline = 'top';
      for(let n=0;n<words.length;n++){
        const test = line + words[n] + ' ';
        if(ctx.measureText(test).width > maxWidth && n > 0){
          ctx.fillText(line, x, ly);
          line = words[n] + ' ';
          ly += lineHeight;
        } else line = test;
      }
      ctx.fillText(line, x, ly);
    }

    // 7) Export CSV / JSON
    function toCSV(scores, values){
      const lines = [];
      lines.push(['item','texte','reponse'].join(','));
      ITEMS.forEach((t,i)=>{
        const v = values[i+1] ?? '';
        lines.push([i+1, '"'+t.replaceAll('"','""')+'"', v].join(','));
      });
      lines.push('');
      lines.push(['driver','moyenne','pourcent'].join(','));
      DRIVER_KEYS.forEach(k=>{
        const s = scores[k];
        lines.push([s.label, s.mean.toFixed(2), s.pct + '%'].join(','));
      });
      return lines.join('\n');
    }

    function download(filename, content, type='text/plain'){
      const blob = new Blob([content], {type});
      const url = URL.createObjectURL(blob);
      const a = document.createElement('a');
      a.href = url; a.download = filename; document.body.appendChild(a); a.click();
      setTimeout(()=>{ URL.revokeObjectURL(url); a.remove(); }, 0);
    }

    // 8) Persistance locale
    const STORAGE_KEY = 'driversAT.answers.v1';
    function save(values){ localStorage.setItem(STORAGE_KEY, JSON.stringify(values)); }
    function load(){ try{ return JSON.parse(localStorage.getItem(STORAGE_KEY) || '{}'); } catch{ return {}; } }
    function applyLoaded(values){
      Object.entries(values).forEach(([i,v])=>{
        if(v){ const input = document.getElementById(`q${i}-${v}`); if(input) input.checked = true; }
      });
    }

    // 9) Events
    document.getElementById('btn-calc').addEventListener('click', () => {
      const values = getResponses();
      const { valid, missing } = validate(values);
      if(!valid){
        alert(`Vous n\\'avez pas r√©pondu √† ${missing.length} item(s) : ${missing.slice(0,8).join(', ')}${missing.length>8?'‚Ä¶':''}`);
        return;
      }
      if(document.getElementById('persist').checked){ save(values); }
      const scores = computeScores(values);
      renderResults(scores);
    });

    document.getElementById('btn-export-csv').addEventListener('click', () => {
      const values = getResponses();
      const { valid } = validate(values);
      if(!valid){ return alert('Veuillez compl√©ter le questionnaire avant d\'exporter.'); }
      const scores = computeScores(values);
      const csv = toCSV(scores, values);
      download('resultats-drivers.csv', csv, 'text/csv;charset=utf-8');
    });

    document.getElementById('btn-export-json').addEventListener('click', () => {
      const values = getResponses();
      const { valid } = validate(values);
      if(!valid){ return alert('Veuillez compl√©ter le questionnaire avant d\'exporter.'); }
      const scores = computeScores(values);
      const out = { meta: { date: new Date().toISOString() }, values, scores };
      download('resultats-drivers.json', JSON.stringify(out, null, 2), 'application/json');
    });

    document.getElementById('btn-print').addEventListener('click', () => window.print());

    document.getElementById('btn-reset').addEventListener('click', () => {
      if(!confirm('Effacer toutes les r√©ponses ?')) return;
      for(let i=1;i<=ITEMS.length;i++){
        const checked = document.querySelector(`input[name=q${i}]:checked`);
        if(checked) checked.checked = false;
      }
      localStorage.removeItem(STORAGE_KEY);
      document.getElementById('results').style.display = 'none';
      location.hash = '#top';
    });

    document.getElementById('persist').addEventListener('change', (e)=>{
      if(e.target.checked){
        const values = getResponses();
        save(values);
      } else {
        localStorage.removeItem(STORAGE_KEY);
      }
    });

    // 10) Init
    renderItems();
    // Charger si pr√©sent
    const loaded = load();
    if(Object.keys(loaded).length){
      applyLoaded(loaded);
      document.getElementById('persist').checked = true;
    }

  </script>
</body>
</html>
